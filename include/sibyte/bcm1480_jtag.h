/*  *********************************************************************
    *  BCM1280/BCM1480 Board Support Package
    *  
    *  JTAG Constants and Macros		File: bcm1480_jtag.h
    *  
    *  This module contains constants and macros useful for
    *  manipulating the System Control and Debug module on the
    *  BCM1255/BCM1280/BCM1455/BCM1480.
    *  
    *********************************************************************  
    *
    *  Copyright 2003,2004
    *  Broadcom Corporation. All rights reserved.
    *  
    *  This software is furnished under license and may be used and 
    *  copied only in accordance with the following terms and 
    *  conditions.  Subject to these conditions, you may download, 
    *  copy, install, use, modify and distribute modified or unmodified 
    *  copies of this software in source and/or binary form.  No title 
    *  or ownership is transferred hereby.
    *  
    *  1) Any source code used, modified or distributed must reproduce 
    *     and retain this copyright notice and list of conditions 
    *     as they appear in the source file.
    *  
    *  2) No right is granted to use any trade name, trademark, or 
    *     logo of Broadcom Corporation.  The "Broadcom Corporation" 
    *     name may not be used to endorse or promote products derived 
    *     from this software without the prior written permission of 
    *     Broadcom Corporation.
    *  
    *  3) THIS SOFTWARE IS PROVIDED "AS-IS" AND ANY EXPRESS OR
    *     IMPLIED WARRANTIES, INCLUDING BUT NOT LIMITED TO, ANY IMPLIED
    *     WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
    *     PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT 
    *     SHALL BROADCOM BE LIABLE FOR ANY DAMAGES WHATSOEVER, AND IN 
    *     PARTICULAR, BROADCOM SHALL NOT BE LIABLE FOR DIRECT, INDIRECT,
    *     INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
    *     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
    *     GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
    *     BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY 
    *     OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
    *     TORT (INCLUDING NEGLIGENCE OR OTHERWISE), EVEN IF ADVISED OF 
    *     THE POSSIBILITY OF SUCH DAMAGE.
    ********************************************************************* */

#ifndef _BCM1480_JTAG_H
#define _BCM1480_JTAG_H

#include "sb1250_defs.h"
#include "sb1250_jtag.h"

/*
 * JTAG Instruction Register values
 */

#define BCM1480_CPU0OSC        0x26
#define BCM1480_CPU0DSC        0x27
#define BCM1480_CPU0TSC        0x28
#define BCM1480_CPU1OSC        0x2A
#define BCM1480_CPU1DSC        0x2B
#define BCM1480_CPU1TSC        0x2C
#define BCM1480_CPU2OSC        0x30
#define BCM1480_CPU2DSC        0x31
#define BCM1480_CPU2TSC        0x32
#define BCM1480_CPU3OSC        0x34
#define BCM1480_CPU3DSC        0x35
#define BCM1480_CPU3TSC        0x36
#define BCM1480_AGENTSEL       0x37
#define BCM1480_AGENTSCAN      0x38
#define BCM1480_AGENTCLK       0x39
#define BCM1480_MBISTCTRL      0x50
#define BCM1480_MBISTDATA      0x51
#define BCM1480_BSRMODE        0x52
#define BCM1480_SCANTRCCNT     0x53
#define BCM1480_CLAMP          0x54
#define BCM1480_SAMPLE         0x55
#define BCM1480_INTEST         0x56
#define BCM1480_FUSECMD        0x57
#define BCM1480_FUSEDATA       0x58
#define BCM1480_PLLCTRL        0x59
#define BCM1480_PLLSTOP        0x5A
#define BCM1480_SCANNCTKR      0x5B
#define BCM1480_BYPASS         0x7F

/*
 * Agent Select Code:
 */
#define BCM1480_IOB_BR_AGENT_SEL 0x21000
#define BCM1480_IOB_EIF_AGENT_SEL 0x28000
#define BCM1480_IOB_MISC_AGENT_SEL 0x22000
#define BCM1480_IOB_PCIX_AGENT_SEL 0x24000
#define BCM1480_L2C_AGENT_SEL 0x20400
#define BCM1480_L2D_AGENT_SEL 0x20800
#define BCM1480_MC_AGENT_SEL 0x20200
#define BCM1480_NC_AGENT_SEL 0x20080
#define BCM1480_PM_AGENT_SEL 0x20100
#define BCM1480_RX0_AGENT_SEL 0x20001
#define BCM1480_RX1_AGENT_SEL 0x20002
#define BCM1480_RX2_AGENT_SEL 0x20004
#define BCM1480_SCD_AGENT_SEL 0x30000
#define BCM1480_SW_AGENT_SEL 0x20040
#define BCM1480_TX0_AGENT_SEL 0x20008
#define BCM1480_TX1_AGENT_SEL 0x20010
#define BCM1480_TX2_AGENT_SEL 0x20020

/*
 * EJTAG Control Register (Table 502)
 */

#define S_BCM1480_JTAG_CR_DM0             0
#define M_BCM1480_JTAG_CR_DM0             _SB_MAKEMASK1(0)
#define M_BCM1480_JTAG_CR_DM1             _SB_MAKEMASK1(1)
#define M_BCM1480_JTAG_CR_DM2             _SB_MAKEMASK1(2)
#define M_BCM1480_JTAG_CR_DM3             _SB_MAKEMASK1(3)
#define S_BCM1480_JTAG_CR_EJTAGBreak0     4
#define M_BCM1480_JTAG_CR_EJTAGBreak0     _SB_MAKEMASK1(4)
#define M_BCM1480_JTAG_CR_EJTAGBreak1     _SB_MAKEMASK1(5)
#define M_BCM1480_JTAG_CR_EJTAGBreak2     _SB_MAKEMASK1(6)
#define M_BCM1480_JTAG_CR_EJTAGBreak3     _SB_MAKEMASK1(7)
#define S_BCM1480_JTAG_CR_PrTrap0         8
#define M_BCM1480_JTAG_CR_PrTrap0         _SB_MAKEMASK1(8)
#define M_BCM1480_JTAG_CR_PrTrap1         _SB_MAKEMASK1(9)
#define M_BCM1480_JTAG_CR_PrTrap2         _SB_MAKEMASK1(10)
#define M_BCM1480_JTAG_CR_PrTrap3         _SB_MAKEMASK1(11)
#define S_BCM1480_JTAG_CR_ProbEn          12
#define M_BCM1480_JTAG_CR_ProbEn          _SB_MAKEMASK1(12)
#define M_BCM1480_JTAG_CR_PrAcc           _SB_MAKEMASK1(13)
#define M_BCM1480_JTAG_CR_PW              _SB_MAKEMASK1(14)
#define M_BCM1480_JTAG_CR_PbAcc           _SB_MAKEMASK1(15)
#define M_BCM1480_JTAG_CR_MaSl            _SB_MAKEMASK1(16)
#define M_BCM1480_JTAG_CR_ClkStopped      _SB_MAKEMASK1(17)

#define G_BCM1480_JTAG_CR_EJTAGBreak(cpu) (M_BCM1480_JTAG_CR_EJTAGBreak0 << (cpu))
#define G_BCM1480_JTAG_CR_PrTrap(cpu)     (M_BCM1480_JTAG_CR_PrTrap0 << (cpu))

/*
 * PLLCTRL chain
 */

#define S_BCM1480_PLLCTRL_CLKSTOP         0
#define M_BCM1480_PLLCTRL_CLKSTOP         _SB_MAKEMASK1(S_BCM1480_PLLCTRL_CLKSTOP)

#define S_BCM1480_PLLCTRL_CLKSTEP         1
#define M_BCM1480_PLLCTRL_CLKSTEP         _SB_MAKEMASK1(S_BCM1480_PLLCTRL_CLKSTEP)

#define S_BCM1480_PLLCTRL_CLKCOUNT        2
#define M_BCM1480_PLLCTRL_CLKCOUNT        _SB_MAKEMASK(8,S_BCM1480_PLLCTRL_CLKCOUNT)
#define V_BCM1480_PLLCTRL_CLKCOUNT(x)     _SB_MAKEVALUE(x,S_BCM1480_PLLCTRL_CLKCOUNT)
#define G_BCM1480_PLLCTRL_CLKCOUNT(x)     _SB_GETVALUE(x,S_BCM1480_PLLCTRL_CLKCOUNT,M_BCM1480_PLLCTRL_CLKCOUNT)

#define S_BCM1480_PLLCTRL_BYPASS          10
#define M_BCM1480_PLLCTRL_BYPASS          _SB_MAKEMASK1(S_BCM1480_PLLCTRL_BYPASS)

#define S_BCM1480_PLLCTRL_PLL_IREF	  11
#define M_BCM1480_PLLCTRL_PLL_IREF	  _SB_MAKEMASK(2,S_BCM1480_PLLCTRL_PLL_IREF)

#define S_BCM1480_PLLCTRL_PLL_VCO	  13
#define M_BCM1480_PLLCTRL_PLL_VCO	  _SB_MAKEMASK(4,S_BCM1480_PLLCTRL_PLL_VCO)

#define S_BCM1480_PLLCTRL_PLLPHASE        19
#define M_BCM1480_PLLCTRL_PLLPHASE        _SB_MAKEMASK(2,S_BCM1480_PLLCTRL_PLLPHASE)
#define V_BCM1480_PLLCTRL_PLLPHASE(x)     _SB_MAKEVALUE(x,S_BCM1480_PLLCTRL_PLLPHASE)
#define G_BCM1480_PLLCTRL_PLLPHASE(x)     _SB_GETVALUE(x,S_BCM1480_PLLCTRL_PLLPHASE,M_BCM1480_PLLCTRL_PLLPHASE)

#define K_BCM1480_PLLCTRL_PLLPHASE_A      1
#define K_BCM1480_PLLCTRL_PLLPHASE_B      3

#define V_BCM1480_PLLCTRL_PLLPHASE_A      V_BCM1480_PLLCTRL_PLLPHASE(K_BCM1480_PLLCTRL_PLLPHASE_A)
#define V_BCM1480_PLLCTRL_PLLPHASE_B      V_BCM1480_PLLCTRL_PLLPHASE(K_BCM1480_PLLCTRL_PLLPHASE_B)

#define S_BCM1480_PLLCTRL_STOPCOUNT       21
#define M_BCM1480_PLLCTRL_STOPCOUNT       _SB_MAKEMASK(48,S_BCM1480_PLLCTRL_STOPCOUNT)
#define V_BCM1480_PLLCTRL_STOPCOUNT(x)    _SB_MAKEVALUE(x,S_BCM1480_PLLCTRL_STOPCOUNT)
#define G_BCM1480_PLLCTRL_STOPCOUNT(x)    _SB_GETVALUE(x,S_BCM1480_PLLCTRL_STOPCOUNT,M_BCM1480_PLLCTRL_STOPCOUNT)

/* these bits are in the second 64-bit word.  mask values are 64 bits wide. */

#define S_BCM1480_PLLCTRL_PLLSTOP         69
#define M_BCM1480_PLLCTRL_PLLSTOP         _SB_MAKEMASK1(S_BCM1480_PLLCTRL_PLLSTOP-64)
#define S_BCM1480_PLLCTRL_STOPSTRETCH     70
#define M_BCM1480_PLLCTRL_STOPSTRETCH     _SB_MAKEMASK1(S_BCM1480_PLLCTRL_STOPSTRETCH-64)
#define S_BCM1480_PLLCTRL_STARTCOND       71
#define M_BCM1480_PLLCTRL_STARTCOND       _SB_MAKEMASK1(S_BCM1480_PLLCTRL_STARTCOND-64)
#define S_BCM1480_PLLCTRL_STOPPING        72
#define M_BCM1480_PLLCTRL_STOPPING        _SB_MAKEMASK1(S_BCM1480_PLLCTRL_STOPPING-64)
#define S_BCM1480_PLLCTRL_STOPSTRDONE     73
#define M_BCM1480_PLLCTRL_STOPSTRDONE     _SB_MAKEMASK1(S_BCM1480_PLLCTRL_STOPSTRDONE-64)

#define S_BCM1480_PLLCTRL_STRETCHMODE     74
#define M_BCM1480_PLLCTRL_STRETCHMODE     _SB_MAKEMASK(2,S_BCM1480_PLLCTRL_STRETCHMODE-64)
#define V_BCM1480_PLLCTRL_STRETCHMODE(x)  _SB_MAKEVALUE(x,S_BCM1480_PLLCTRL_STRETCHMODE-64)
#define G_BCM1480_PLLCTRL_STRETCHMODE(x)  _SB_GETVALUE(x,S_BCM1480_PLLCTRL_STRETCHMODE-64,M_BCM1480_PLLCTRL_STRETCHMODE)

#define S_BCM1480_PLLCTRL_REG_ADJ         76
#define M_BCM1480_PLLCTRL_REG_ADJ         _SB_MAKEMASK(3,S_BCM1480_PLLCTRL_REG_ADJ-64)
#define V_BCM1480_PLLCTRL_REG_ADJ(x)      _SB_MAKEVALUE(x,S_BCM1480_PLLCTRL_REG_ADJ-64)
#define G_BCM1480_PLLCTRL_REG_ADJ(x)      _SB_GETVALUE(x,S_BCM1480_PLLCTRL_REG_ADJ-64,M_BCM1480_PLLCTRL_REG_ADJ)

#define S_BCM1480_PLLCTRL_REG_AD          79
#define M_BCM1480_PLLCTRL_REG_AD          _SB_MAKEMASK(3,S_BCM1480_PLLCTRL_REG_AD-64)
#define V_BCM1480_PLLCTRL_REG_AD(x)       _SB_MAKEVALUE(x,S_BCM1480_PLLCTRL_REG_AD-64)
#define G_BCM1480_PLLCTRL_REG_AD(x)       _SB_GETVALUE(x,S_BCM1480_PLLCTRL_REG_AD-64,M_BCM1480_PLLCTRL_REG_AD)

#define S_BCM1480_PLLCTRL_GAP_RR          82
#define M_BCM1480_PLLCTRL_GAP_RR          _SB_MAKEMASK(3,S_BCM1480_PLLCTRL_GAP_RR-64)
#define V_BCM1480_PLLCTRL_GAP_RR(x)       _SB_MAKEVALUE(x,S_BCM1480_PLLCTRL_GAP_RR-64)
#define G_BCM1480_PLLCTRL_GAP_RR(x)       _SB_GETVALUE(x,S_BCM1480_PLLCTRL_GAP_RR-64,M_BCM1480_PLLCTRL_GAP_RR)

#define S_BCM1480_PLLCTRL_GAP_RS          85
#define M_BCM1480_PLLCTRL_GAP_RS          _SB_MAKEMASK(3,S_BCM1480_PLLCTRL_GAP_RS-64)
#define V_BCM1480_PLLCTRL_GAP_RS(x)       _SB_MAKEVALUE(x,S_BCM1480_PLLCTRL_GAP_RS-64)
#define G_BCM1480_PLLCTRL_GAP_RS(x)       _SB_GETVALUE(x,S_BCM1480_PLLCTRL_GAP_RS-64,M_BCM1480_PLLCTRL_GAP_RS)

#define S_BCM1480_PLLCTRL_VOLT_BYPASS     88
#define M_BCM1480_PLLCTRL_VOLT_BYPASS     _SB_MAKEMASK1(S_BCM1480_PLLCTRL_VOLT_BYPASS-64)

#define BCM1480_PLLCTRL_CHAIN_LENGTH      89


/*
 * System Config chain
 */

#define S_BCM1480_SYSCFG_BIG_ENDIAN       22
#define M_BCM1480_SYSCFG_BIG_ENDIAN       _SB_MAKEMASK1(S_BCM1480_SYSCFG_BIG_ENDIAN)

#define S_BCM1480_SYSCFG_CPU_RESET_0      52
#define M_BCM1480_SYSCFG_CPU_RESET_0      _SB_MAKEMASK1(S_BCM1480_SYSCFG_CPU_RESET_0)
#define S_BCM1480_SYSCFG_CPU_RESET_1      53
#define M_BCM1480_SYSCFG_CPU_RESET_1      _SB_MAKEMASK1(S_BCM1480_SYSCFG_CPU_RESET_1)
#define S_BCM1480_SYSCFG_CPU_RESET_2      54
#define M_BCM1480_SYSCFG_CPU_RESET_2      _SB_MAKEMASK1(S_BCM1480_SYSCFG_CPU_RESET_2)
#define S_BCM1480_SYSCFG_CPU_RESET_3      55
#define M_BCM1480_SYSCFG_CPU_RESET_3      _SB_MAKEMASK1(S_BCM1480_SYSCFG_CPU_RESET_3)

#define S_BCM1480_SYSCFG_CPU_RESET(n)     (S_BCM1480_SYSCFG_CPU_RESET_0 + (n))
#define M_BCM1480_SYSCFG_CPU_RESET(n)     (M_BCM1480_SYSCFG_CPU_RESET_0 << (n))

#define S_BCM1480_SYSCFG_CPU_DISABLE_0    56
#define M_BCM1480_SYSCFG_CPU_DISABLE_0    _SB_MAKEMASK1(S_BCM1480_SYSCFG_CPU_DISABLE_0)
#define S_BCM1480_SYSCFG_CPU_DISABLE_1    57
#define M_BCM1480_SYSCFG_CPU_DISABLE_1    _SB_MAKEMASK1(S_BCM1480_SYSCFG_CPU_DISABLE_1)
#define S_BCM1480_SYSCFG_CPU_DISABLE_2    58
#define M_BCM1480_SYSCFG_CPU_DISABLE_2    _SB_MAKEMASK1(S_BCM1480_SYSCFG_CPU_DISABLE_2)
#define S_BCM1480_SYSCFG_CPU_DISABLE_3    59
#define M_BCM1480_SYSCFG_CPU_DISABLE_3    _SB_MAKEMASK1(S_BCM1480_SYSCFG_CPU_DISABLE_3)

#define S_BCM1480_SYSCFG_SB_SOFTRES       60
#define M_BCM1480_SYSCFG_SB_SOFTRES       _SB_MAKEMASK1(S_BCM1480_SYSCFG_SB_SOFTRES       60)
#define S_BCM1480_SYSCFG_SYSTEM_RESET     62
#define M_BCM1480_SYSCFG_SYSTEM_RESET     _SB_MAKEMASK1(S_BCM1480_SYSCFG_SYSTEM_RESET)

/* these bits are in the second 64-bit word.  mask values are 64 bits wide. */

#define S_BCM1480_SYSCFG_SERZB_ARD        64
#define M_BCM1480_SYSCFG_SERZB_ARD        _SB_MAKEMASK1(S_BCM1480_SYSCFG_SERZB_ARD-64)
#define S_BCM1480_SYSCFG_SERZB_AR         65
#define M_BCM1480_SYSCFG_SERZB_AR         _SB_MAKEMASK1(S_BCM1480_SYSCFG_SERZB_AR-64)
#define S_BCM1480_SYSCFG_MISR_MODE        66
#define M_BCM1480_SYSCFG_MISR_MODE        _SB_MAKEMASK1(S_BCM1480_SYSCFG_MISR_MODE-64)
#define S_BCM1480_SYSCFG_SCD_FTM          67
#define M_BCM1480_SYSCFG_SCD_FTM          _SB_MAKEMASK1(S_BCM1480_SYSCFG_SCD_FTM-64)

#define S_BCM1480_SYSCFG_SCD_RST          68
#define M_BCM1480_SYSCFG_SCD_RST          _SB_MAKEMASK1(S_BCM1480_SYSCFG_SCD_RST-64)
#define S_BCM1480_SYSCFG_IOB_RST          69
#define M_BCM1480_SYSCFG_IOB_RST          _SB_MAKEMASK1(S_BCM1480_SYSCFG_IOB_RST-64)
#define S_BCM1480_SYSCFG_L2C_RST          70
#define M_BCM1480_SYSCFG_L2C_RST          _SB_MAKEMASK1(S_BCM1480_SYSCFG_L2C_RST-64)
#define S_BCM1480_SYSCFG_MC_RST           71
#define M_BCM1480_SYSCFG_MC_RST           _SB_MAKEMASK1(S_BCM1480_SYSCFG_MC_RST-64)
#define S_BCM1480_SYSCFG_TX0_RST          72
#define M_BCM1480_SYSCFG_TX0_RST          _SB_MAKEMASK1(S_BCM1480_SYSCFG_TX0_RST-64)
#define S_BCM1480_SYSCFG_TX1_RST          73
#define M_BCM1480_SYSCFG_TX1_RST          _SB_MAKEMASK1(S_BCM1480_SYSCFG_TX1_RST-64)
#define S_BCM1480_SYSCFG_TX2_RST          74
#define M_BCM1480_SYSCFG_TX2_RST          _SB_MAKEMASK1(S_BCM1480_SYSCFG_TX2_RST-64)
#define S_BCM1480_SYSCFG_RX0_RST          75
#define M_BCM1480_SYSCFG_RX0_RST          _SB_MAKEMASK1(S_BCM1480_SYSCFG_RX0_RST-64)
#define S_BCM1480_SYSCFG_RX1_RST          76
#define M_BCM1480_SYSCFG_RX1_RST          _SB_MAKEMASK1(S_BCM1480_SYSCFG_RX1_RST-64)
#define S_BCM1480_SYSCFG_RX2_RST          77
#define M_BCM1480_SYSCFG_RX2_RST          _SB_MAKEMASK1(S_BCM1480_SYSCFG_RX2_RST-64)
#define S_BCM1480_SYSCFG_PM_RST           78
#define M_BCM1480_SYSCFG_PM_RST           _SB_MAKEMASK1(S_BCM1480_SYSCFG_PM_RST-64)
#define S_BCM1480_SYSCFG_NC_RST           79
#define M_BCM1480_SYSCFG_NC_RST           _SB_MAKEMASK1(S_BCM1480_SYSCFG_NC_RST-64)
#define S_BCM1480_SYSCFG_SW_RST           80
#define M_BCM1480_SYSCFG_SW_RST           _SB_MAKEMASK1(S_BCM1480_SYSCFG_SW_RST-64)
/* RESERVED                               81 */

#define BCM1480_SYSCFG_CHAIN_LENGTH       82

/*
 * ZBbus definitions (1x55/1x80-specific)
 */

#define K_BCM1480_ZB_CMD_READ_SHD	0
#define K_BCM1480_ZB_CMD_READ_EXC	1
#define K_BCM1480_ZB_CMD_WRITE		2
#define K_BCM1480_ZB_CMD_WRITE_INV	3
#define K_BCM1480_ZB_CMD_READ_KILL	4
#define K_BCM1480_ZB_CMD_READ_INV	5
#define K_BCM1480_ZB_CMD_WRITE_FL	6
#define K_BCM1480_ZB_CMD_NOP		7

#endif /* _BCM1480_JTAG_H */
